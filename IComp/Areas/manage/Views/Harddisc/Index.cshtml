@model PaginatedListDto<HardDiscListItemDto>
@{
    ViewData["Title"] = "Index";
    int counter = (Model.PageIndex - 1) * 3;
    var temp = -1;
    if (Model.PageIndex == 1)
    {
        temp = 0;
    }
    if (temp == Model.TotalPage)
    {
        temp = -2;
    }
}

<div class="container">
    <div class="row">
        <div class="col-lg-12 d-flex justify-content-between">
            <h3>Product</h3>
            <a asp-action="index" asp-controller="harddisccapacity" class="btn btn-primary">Capacities</a>
            <a asp-action="create" class="btn btn-primary">Create</a>
        </div>
        <div class="col-lg-12">
            <table class="table">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Model</th>
                        <th scope="col">ProductCount</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        counter++;
                        <tr>
                            <th scope="row">@counter</th>
                            <td>@item.ModelName</td>
                            <td>@item.ProductsCount</td>
                            <td></td>
                            <td>
                                <a asp-action="edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                                <a asp-action="@(item.IsDeleted?"restore":"delete")" asp-route-id="@item.Id" class="btn btn-@(item.IsDeleted?"info restore-button":"danger remove-button") ">@(item.IsDeleted?"Restore":"Delete")</a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>

            <nav aria-label="Page navigation example">
                <ul class="pagination">
                     @if (Model.HasPrev)
                    {
                        <li class="page-item"><a class="page-link" asp-action="index" asp-route-page="1">@("<<")</a></li>
                        <li class="page-item"><a class="page-link" asp-action="index" asp-route-page="@(Model.PageIndex - 1)">@("<")</a></li>
                    }
                    @for (int i = 1; i <= 3; i++, temp++)
                    {
                        if ((Model.PageIndex + temp) != 0 && (Model.PageIndex + temp) != -1)
                        {
                            <li class="page-item"><a class="page-link" asp-action="index" asp-route-page="@(Model.PageIndex+temp)" style="display:@((Model.PageIndex+temp)>Model.TotalPage?"none":"block")">@(Model.PageIndex+temp)</a></li>
                        }
                    }
                    @if (Model.HasNext)
                    {
                        <li class="page-item"><a class="page-link" asp-action="index" asp-route-page="@(Model.PageIndex + 1)">@(">")</a></li>
                        <li class="page-item"><a class="page-link" asp-action="index" asp-route-page="@Model.TotalPage">@(">>")</a></li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>

